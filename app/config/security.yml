security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_CUSTOMER: ROLE_USER
        ROLE_ADMIN: ROLE_CUSTOMER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        admin_secured_area:
            pattern: /admin/.*
            provider: fos_userbundle
            anonymous: ~
            form_login:
                csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                check_path: /admin/login_check
                login_path: /admin/login
            logout:
                path:   /admin/logout
                target: /
        members_secured_area:
            pattern: /members/.*
            provider: fos_userbundle
            anonymous: ~
            form_login:
                csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                check_path: /members/login_check
                login_path: /members/login
            logout:
                path:   /members/logout
                target: /
    #    main:
    #        pattern: ^/
    #        form_login:
    #            provider: fos_userbundle
    #            csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
    #            check_path: /login_check
    #            login_path: /

    #        logout:       
    #            path:   /logout
    #            target: /
    #        anonymous:    true

    access_control:
        - { path: ^/members/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /members/recover-password, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/$, role: ROLE_ADMIN }
        - { path: ^/members/.*, role: ROLE_CUSTOMER }
        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY }